# Задание к лекции №7
# 1) Установить Nginx и настроить его на работу с php-fpm.
# 2) Настроить Nginx в качестве балансировщика. Используя mod_upstream, раскидывать весь входящий трафик по трем Apache2-серверам, находящимся в локальной сети. 
# 3) Настроить Nignx + ssl с использованием cert-manager (материал в доп ссылке в комментариях)

# Все-таки взял себе домен, чтобы попрактиковаться немного (плюс с расчетом на будущее использование)
# humacat.online - должна открыться дефолтная страничка nginx
# humacat.online/nginx.php - показать, что nginx работает с php. Конфигурация такая же, как и в лекции №7
# Проксирование на три сервера:
# Использую Яндекс.Облако, с 4-мя VPS. У одной VPS-ки main есть доступ во внешний мир + она находится в локальной сети с остальными
# https://imgur.com/FM5eylv
# На main установлен только nginx, на остальных только apache2. Пример папок /var/www/html 
vudex@main:~$ ls -l /var/www/html/
total 8
-rw-r--r-- 1 root root 612 Mar 23 10:10 index.nginx-debian.html
-rw-r--r-- 1 root root  20 Mar 23 10:13 nginx.php

vudex@apache1:~$ ls -l /var/www/html/
total 24
-rw-r--r-- 1 root root   130 Mar 23 09:17 cat1.html
-rw-r--r-- 1 root root 17074 Jun 19  2017 cat1.jpg
vudex@apache1:~$ 

vudex@apache2:~$ ls -l /var/www/html/
total 512
-rw-r--r-- 1 root root 518614 Jan 10  2019 cat2.gif
-rw-r--r-- 1 root root    130 Mar 23 09:17 cat2.html

vudex@apache3:~$ ls -l /var/www/html/
total 48
-rw-r--r-- 1 root root   130 Mar 23 09:18 cat3.html
-rw-r--r-- 1 root root 43050 Mar 23 09:16 cat3.jpg

# Конфигурация default в site-enabled выглядит след. образом:
upstream cat1 {
        server 10.0.0.27;
}
upstream cat2 {
        server 10.0.0.28;
}
upstream cat3 {
        server 10.0.0.24;
}

server {

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;
    server_name humacat.online; # managed by Certbot


        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        location /cat1.html {
                proxy_pass http://cat1;
        }

        location /cat1.jpg {
                proxy_pass http://cat1;
        }


        location /cat2.html {
                proxy_pass http://cat2;
        }

        location /cat2.gif {
                proxy_pass http://cat2;
        }
        location /cat3.html {
                proxy_pass http://cat3;
        }

        location /cat3.jpg {
                proxy_pass http://cat3;
        }


        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }

       # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/humacat.online/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/humacat.online/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = humacat.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80 ;
        listen [::]:80 ;
    server_name humacat.online;
    return 404; # managed by Certbot


}

# Соотвественно, можно проверить, что переход по ссылке humacat.online/cat1.html cat2.html cat3.html перенаправляет запрос
# на соответствующие локальные сервера apache
# Также из конфигурации видно, что сайт использует ssl-сертификат, выданый при помощи certbot, что также можно проверить, перейдя на сайт.

# Задание к лекции №8
# 1) Настроить сетевой фильтр, чтобы из внешней сети можно было обратиться только к сервисам http и ssh (80 и 443).
# 2) Запросы, идущие на порт 8080, перенаправлять на порт 80.
# 3) Настроить доступ по ssh только для вашего IP-адреса (или из всей сети вашего провайдера).
# 4) * Создать нового пользователя, сгенерировать для него новые сертификаты. Настроить доступ на сервер вновь созданного пользователя с использованием сертификатов. 
# Подключиться с помощью putty или ssh без ввода пароля (используя только сертификат).

# Команды для настройки iptables
vudex@main:~$ sudo iptables -A INPUT -p tcp --dport 22 -s 159.253.170.217/32 -j ACCEPT
vudex@main:~$ sudo iptables -A INPUT -p tcp --dport 80 -j ACCEPT
vudex@main:~$ sudo iptables -A INPUT -p tcp --dport 8080 -j ACCEPT
vudex@main:~$ sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT
vudex@main:~$ sudo iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDIRECT --to-port 443
vudex@main:~$ sudo iptables -A INPUT -P DROP

# Редирект сделал с 8080 на 443 так как у меня по-умолчанию nginx редиректит все с 80 порта на 443 и при редиректе с 8080 -> 80  
# через iptables при таком раскладе не отрабатывает. 
# Доступ по ssh настроен с учетом моего ip-адреса.
# Так как VPS я создавал в Яндекс.Облаке, я по умолчанию использую только аутентификацию по паре ключей, а не по паролю. 
# При создании машины я указываю публичный ключ. При подключении я указываю в ssh терминале путь к private key.
# К локальным машинам я подключаюсь через машину main, для этого необходимо было создать в пути пользователя private key (id_rsa)
vudex@main:~$ ls -l ~/.ssh/
total 12
-rw------- 1 vudex vudex  398 Mar 23 10:06 authorized_keys
-rw-r--r-- 1 root  root  1834 Mar 23 11:04 id_rsa
-rw-r--r-- 1 vudex vudex  666 Mar 23 11:05 known_hosts

                                                                
